from Config import EXE

DOC = '''\
  > {description}:
    {exe} {options} *args'''

MANY = "..."

class BaseApp:

	def __init__(self):
		self.args = {}

	def matches(self, args):
		opts = self.options()
		n = len(opts)
		if n > len(args):
			return False
		self.args[MANY] = args[n:]
		return self.compare(args[:n], opts)
	
	def main(self, args):
		raise NotImplementedError
	
	def doc(self):
		return DOC.format(
			description=self.__doc__, 
			exe=EXE,
			options=" ".join(self.options())
		)

	# === PROTECTED ===
	
	def options(self):
		raise NotImplementedError

	# === PRIVATE ===
	
	def compare(self, args, opts):
		return \
		all(map(self.accept, zip(args, opts))) and \
		all(map(self.isNotOption, self.args[MANY]))
	
	def isNotOption(self, arg):
		return arg[0] != "-"
	
	def accept(self, argOpt):
		arg, opt = argOpt
		if self.isAny(arg, opt):
			self.args[opt] = arg
			return True
		elif self.matchShort(arg, opt):
			return True
		return arg == opt

	def matchShort(self, arg, opt):
		if len(arg) != 2 or len(opt) < 4:
			return False
		if opt[:2] == "--":
			if arg[0] == "-":
				return arg[1] == opt[2]
		return False
	
	def isAny(self, arg, opt):
		return opt[0] == "<" and opt[-1] == ">"
